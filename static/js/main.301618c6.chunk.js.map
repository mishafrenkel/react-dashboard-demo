{"version":3,"sources":["assets/images/user-img-placeholder.jpeg","components/charts-theme.js","components/styled-components.js","components/config.js","components/format-number.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","window","FusionCharts","register","name","theme","base","chart","bgAlpha","canvasBgAlpha","baseFont","baseFontSize","baseFontBold","chartBottomMargin","chartTopMargin","chartLeftMargin","chartRightMargin","canvasBottomMargin","canvasTopMargin","canvasRightMargin","canvasLeftMargin","showBorder","showCanvasBorder","baseFontColor","captionFontBold","captionFontSize","subCaptionFontSize","tooltipColor","tooltipBgColor","tooltipBgAlpha","tooltipPadding","toolTipBorderAlpha","toolTipBorderRadius","showValues","legendBgAlpha","legendBorderAlpha","legendBorderThickness","bar2d","placeValuesInside","usePlotGradientColor","showAlternateVGridColor","divLineAlpha","divLineColor","captionFontColor","paletteColors","valuePadding","yAxisName","yAxisNameAlpha","yAxisNameFontSize","yAxisNamePadding","valueFontBold","valueFontSize","plotToolText","captionAlignment","captionPadding","doughnut2d","showLabels","use3DLighting","showPlotBorder","defaultCenterLabel","pieRadius","doughnutRadius","showTooltip","enableRotation","enableSlicing","startingAngle","geo","legendScaleLineThickness","legendaxisborderalpha","legendShadow","plotFillAlpha","borderColor","borderThickness","nullEntityColor","nullEntityAlpha","entityFillHoverColor","entityToolText","Container","styled","div","Nav","nav","formatNum","num","i","si","value","symbol","length","toFixed","replace","ReactFC","fcRoot","Charts","Maps","USARegion","url","config","App","getData","arg","totalRevenue","selectedValue","arr","state","items","arrLen","amRevenue","ebRevenue","etRevenue","productViews","purchaseRate","checkoutRate","abandonedRate","ordersTrendStore","ordersTrendRegion","orderesTrendnw","orderesTrendsw","orderesTrendc","orderesTrendne","orderesTrendse","parseInt","revenue","push","label","orders","displayValue","product_views","purchase_rate","checkout_rate","abandoned_rate","orders_nw","orders_sw","orders_c","orders_ne","orders_se","id","setState","updateDashboard","event","dropdownOptions","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","rowObject","j","month","Array","from","Set","reverse","className","src","UserImg","alt","options","this","onChange","placeholder","type","width","height","dataFormat","containerBackgroundOpacity","dataSource","caption","alpha","style","minHeight","dataEmptyMessage","subCaption","colorrange","code","minvalue","gradient","color","minValue","maxvalue","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.301618c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-img-placeholder.be2ed151.jpeg\";","window.FusionCharts.register(\"theme\", {\n  name: \"ecommerce\",\n  theme: {\n    base: {\n      chart: {\n        bgAlpha: \"0\",\n        canvasBgAlpha: \"0\",\n        baseFont: \"basefont-regular\",\n        baseFontSize: \"14\",\n        baseFontBold: \"0\",\n        chartBottomMargin: \"0\",\n        chartTopMargin: \"0\",\n        chartLeftMargin: \"0\",\n        chartRightMargin: \"0\",\n        canvasBottomMargin: \"0\",\n        canvasTopMargin: \"0\",\n        canvasRightMargin: \"0\",\n        canvasLeftMargin: \"0\",\n        showBorder: \"0\",\n        showCanvasBorder: \"0\",\n        baseFontColor: \"#ffffff\",\n        captionFontBold: \"0\",\n        captionFontSize: \"14\",\n        subCaptionFontSize: \"14\",\n        tooltipColor: \"#ffffff\",\n        tooltipBgColor: \"#000000\",\n        tooltipBgAlpha: \"60\",\n        tooltipPadding: \"5\",\n        toolTipBorderAlpha: \"10\",\n        toolTipBorderRadius: \"3\",\n        showValues: \"0\",\n        legendBgAlpha: \"0\",\n        legendBorderAlpha: \"0\",\n        legendBorderThickness: \"0\"\n      }\n    },\n\n    bar2d: {\n      chart: {\n        placeValuesInside: \"0\",\n        usePlotGradientColor: \"0\",\n        showAlternateVGridColor: \"0\",\n        chartLeftMargin: \"5\",\n        canvasLeftMargin: \"5\",\n        divLineAlpha: \"10\",\n        divLineColor: \"#ffffff\",\n        captionFontColor: \"#8091ab\",\n        paletteColors: \"#1D91C0\",\n        valuePadding: \"5\",\n        yAxisName: \"Orders\",\n        yAxisNameAlpha: \"50\",\n        yAxisNameFontSize: \"12\",\n        yAxisNamePadding: \"20\",\n        valueFontBold: \"0\",\n        valueFontSize: \"12\",\n        plotToolText: \"<div>$label<br><b>$value orders</b>\",\n        captionAlignment: \"left\",\n        captionPadding: \"20\"\n      }\n    },\n\n    doughnut2d: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        showLabels: \"0\",\n        showValues: \"0\",\n        use3DLighting: \"0\",\n        showPlotBorder: \"0\",\n        defaultCenterLabel: \"75%\",\n        pieRadius: \"45\",\n        doughnutRadius: \"33\",\n        showTooltip: \"0\",\n        enableRotation: \"0\",\n        enableSlicing: \"0\",\n        startingAngle: \"90\"\n      }\n    },\n\n    geo: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        legendScaleLineThickness: \"0\",\n        legendaxisborderalpha: \"0\",\n        legendShadow: \"0\",\n        plotFillAlpha: \"85\",\n        showBorder: \"1\",\n        borderColor: \"#ffffff\",\n        borderThickness: \"0.3\",\n        nullEntityColor: \"#17202e\",\n        nullEntityAlpha: \"50\",\n        entityFillHoverColor: \"#17202e\",\n        captionAlignment: \"left\",\n        entityToolText: \"<div>$lname<br><b>$value orders</b>\",\n        chartLeftMargin: \"40\"\n      }\n    }\n  }\n});\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Nav = styled.nav``;","export default {\n    apiKey: 'AIzaSyDevq2B8eJJXVDZllE2RyuRbtpHBHPtwOs',\n    spreadsheetId: '1sCgmzBIq2K9jUckLuYSWbDq4CuNUfdtuE6a5xI3I5Hw'\n}","export default function formatNum(num) {\n  let si = [\n    { value: 1, symbol: \"\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"m\" },\n    { value: 1e9, symbol: \"g\" },\n    { value: 1e12, symbol: \"t\" },\n    { value: 1e15, symbol: \"p\" },\n    { value: 1e18, symbol: \"e\" }\n  ];\n  let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n  return (num / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n}\n","import React, { Component } from \"react\";\nimport { Container, Nav } from \"./styled-components\";\n\n// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Maps from \"fusioncharts/fusioncharts.maps\";\nimport USARegion from \"fusionmaps/maps/es/fusioncharts.usaregion\";\nimport ReactFC from \"react-fusioncharts\";\nimport \"./charts-theme\";\n\nimport config from \"./config\";\nimport Dropdown from \"react-dropdown\";\nimport formatNum from \"./format-number\";\n\nimport UserImg from \"../assets/images/user-img-placeholder.jpeg\";\n\nReactFC.fcRoot(FusionCharts, Charts, Maps, USARegion);\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOptions: [],\n      selectedValue: null,\n      amRevenue: null,\n      ebRevenue: null,\n      etRevenue: null,\n      totalRevenue: null,\n      productViews: null,\n      purchaseRate: \" \",\n      checkoutRate: \" \",\n      abandonedRate: \" \",\n      ordersTrendStore: []\n    };\n  }\n\n  getData = arg => {\n    // google sheets data\n    const arr = this.state.items;\n    const arrLen = arr.length;\n\n    // kpi's\n    // amazon revenue\n    let amRevenue = 0;\n    //ebay revenue\n    let ebRevenue = 0;\n    // etsy revenue\n    let etRevenue = 0;\n    // total revenue\n    let totalRevenue = 0;\n    // product views\n    let productViews = 0;\n    // purchase rate\n    let purchaseRate = 0;\n    // checkout rate\n    let checkoutRate = 0;\n    // abandoned rate\n    let abandonedRate = 0;\n    // order trend by brand\n    let ordersTrendStore = [];\n    // order trend by region\n    let ordersTrendRegion = [];\n    let orderesTrendnw = 0;\n    let orderesTrendsw = 0;\n    let orderesTrendc = 0;\n    let orderesTrendne = 0;\n    let orderesTrendse = 0;\n\n    let selectedValue = null;\n\n    for (let i = 0; i < arrLen; i++) {\n      if (arg === arr[i][\"month\"]) {\n        if (arr[i][\"source\"] === \"AM\") {\n          amRevenue += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Amazon\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders} orders`\n          });\n        } else if (arr[i][\"source\"] === \"EB\") {\n          ebRevenue += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Ebay\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders} orders`\n          });\n        } else if (arr[i][\"source\"] === \"ET\") {\n          etRevenue += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Etsy\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders} orders`\n          });\n        }\n        productViews += parseInt(arr[i].product_views);\n        purchaseRate += parseInt(arr[i].purchase_rate / 3);\n        checkoutRate += parseInt(arr[i].checkout_rate / 3);\n        abandonedRate += parseInt(arr[i].abandoned_rate / 3);\n        orderesTrendnw += parseInt(arr[i].orders_nw);\n        orderesTrendsw += parseInt(arr[i].orders_sw);\n        orderesTrendc += parseInt(arr[i].orders_c);\n        orderesTrendne += parseInt(arr[i].orders_ne);\n        orderesTrendse += parseInt(arr[i].orders_se);\n      }\n    }\n\n    totalRevenue = amRevenue + ebRevenue + etRevenue;\n    ordersTrendRegion.push({\n      id: \"01\",\n      value: orderesTrendne\n    }, {\n      id: \"02\",\n      value: orderesTrendnw\n    }, {\n      id: \"03\",\n      value: orderesTrendse\n    }, {\n      id: \"04\",\n      value: orderesTrendsw\n    }, {\n      id: \"05\",\n      value: orderesTrendc\n    });\n\n    selectedValue = arg;\n\n    // setting state\n    this.setState({\n      amRevenue: formatNum(amRevenue),\n      ebRevenue: formatNum(ebRevenue),\n      etRevenue: formatNum(etRevenue),\n      totalRevenue: formatNum(totalRevenue),\n      productViews: formatNum(productViews),\n      purchaseRate: purchaseRate,\n      checkoutRate: checkoutRate,\n      abandonedRate: abandonedRate,\n      ordersTrendStore: ordersTrendStore,\n      ordersTrendRegion: ordersTrendRegion,\n      selectedValue: selectedValue\n    });\n  };\n\n  updateDashboard = event => {\n    this.getData(event.value);\n    this.setState({ selectedValue: event.value });\n  };\n\n  componentDidMount() {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        let batchRowValues = data.valueRanges[0].values;\n\n        const rows = [];\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n\n        // dropdown options\n        let dropdownOptions = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          dropdownOptions.push(rows[i].month);\n        }\n\n        dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\n\n        this.setState(\n          {\n            items: rows,\n            dropdownOptions: dropdownOptions,\n            selectedValue: \"Jan 2019\"\n          },\n          () => this.getData(\"Jan 2019\")\n        );\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        {/* static navbar - top */}\n        <Nav className=\"navbar navbar-expand-lg fixed-top is-white is-dark-text\">\n          <Container className=\"navbar-brand h1 mb-0 text-large font-medium\">\n            KPI360.io\n          </Container>\n          <Container className=\"navbar-nav ml-auto\">\n            <Container className=\"user-detail-section\">\n              <span className=\"pr-2\">Hi, Michael</span>\n              <span className=\"img-container\">\n                <img src={UserImg} className=\"rounded-circle\" alt=\"user\" />\n              </span>\n            </Container>\n          </Container>\n        </Nav>\n\n        {/* static navbar - bottom */}\n        <Nav className=\"navbar fixed-top nav-secondary is-dark is-light-text\">\n          <Container className=\"text-medium\">Summary</Container>\n          <Container className=\"navbar-nav ml-auto\">\n            <Dropdown\n              className=\"pr-2 custom-dropdown\"\n              options={this.state.dropdownOptions}\n              onChange={this.updateDashboard}\n              value={this.state.selectedValue}\n              placeholder=\"Select an option\"\n            />\n          </Container>\n        </Nav>\n\n        {/* content area start */}\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          {/* row 1 - revenue */}\n          <Container className=\"row\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Total Revenue\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">$</span>\n                  {this.state.totalRevenue}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Revenue from Amazon\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fab fa-amazon text-large\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">$</span>\n                  {this.state.amRevenue}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Revenue from Ebay\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fab fa-ebay text-x-large logo-adjust\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">$</span>\n                  {this.state.ebRevenue}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Revenue from Etsy\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fab fa-etsy text-medium\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">$</span>\n                  {this.state.etRevenue}\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 2 - conversion */}\n          <Container className=\"row\">\n            <Container className=\"col-md-4 col-lg-3 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading mb-3\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Product Views\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.productViews}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    views\n                  </span>\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-8 col-lg-9 is-light-text mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"row full-height\">\n                  <Container className=\"col-sm-4 full height\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Purchase Rate\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.purchaseRate}%`,\n                              paletteColors: \"#3B70C4, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.purchaseRate}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${100 - this.state.purchaseRate}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                  <Container className=\"col-sm-4 full-height border-left border-right\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Checkout Rate\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.checkoutRate}%`,\n                              paletteColors: \"#41B6C4, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.checkoutRate}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${100 - this.state.checkoutRate}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                  <Container className=\"col-sm-4 full-height\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Abandoned Cart Rate\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${\n                                this.state.abandonedRate\n                              }%`,\n                              paletteColors: \"#EDF8B1, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.abandonedRate}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${100 - this.state.abandonedRate}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 3 - orders trend */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"bar2d\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"Orders Trend\",\n                          subCaption: \"By Stores\"\n                        },\n                        data: this.state.ordersTrendStore\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"usaregion\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"Orders Trend\",\n                          subCaption: \"By Region\"\n                        },\n                        colorrange: {\n                          code: \"#F64F4B\",\n                          minvalue: \"0\",\n                          gradient: \"1\",\n                          color: [\n                            {\n                              minValue: \"10\",\n                              maxvalue: \"25\",\n                              code: \"#EDF8B1\"\n                            },\n                            {\n                              minvalue: \"25\",\n                              maxvalue: \"50\",\n                              code: \"#18D380\"\n                            }\n                          ]\n                        },\n                        data: this.state.ordersTrendRegion\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n        {/* content area end */}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-dropdown/style.css';\nimport './style.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}